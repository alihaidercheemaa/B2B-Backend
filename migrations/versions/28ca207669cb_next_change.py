"""next change

Revision ID: 28ca207669cb
Revises: 688831d0bee2
Create Date: 2025-08-08 00:34:15.673249

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '28ca207669cb'
down_revision: Union[str, Sequence[str], None] = '688831d0bee2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('registration_agreements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('agreement_signed', sa.Boolean(), nullable=False),
    sa.Column('agreement_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_registration_agreements_id'), 'registration_agreements', ['id'], unique=False)
    op.create_table('registration_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('business_name', sa.String(length=255), nullable=True),
    sa.Column('address', sa.String(length=500), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('business_type', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_registration_info_id'), 'registration_info', ['id'], unique=False)
    op.create_table('registration_levels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('level', sa.Enum('DROP_SHIPPING', 'CONSIGNMENT', 'IMPORT_EXPORT', 'WHOLESALE', 'EXHIBITION', 'AUCTION', 'WHITE_LABEL', 'BRICK_MORTAR', 'DESIGN_COLLABORATION', 'STORYTELLING', 'TRAINER', 'CRAFT_RD', 'INVESTOR', 'NGO_POLICY', 'SUBSIDIARY', 'KPI_LEADER', name='partnershiplevel'), nullable=False),
    sa.Column('is_lateral', sa.Boolean(), nullable=True),
    sa.Column('payment_status', sa.String(length=50), nullable=True),
    sa.Column('verification_status', sa.String(length=50), nullable=True),
    sa.Column('retention_period_months', sa.Integer(), nullable=False),
    sa.Column('kpi_threshold', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_registration_levels_id'), 'registration_levels', ['id'], unique=False)
    op.create_table('registration_products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('product_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_registration_products_id'), 'registration_products', ['id'], unique=False)
    op.add_column('categories', sa.Column('subcategory', sa.String(length=100), nullable=False))
    op.drop_constraint(op.f('categories_name_key'), 'categories', type_='unique')
    op.drop_column('categories', 'description')
    op.add_column('product_categories', sa.Column('id', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_product_categories_id'), 'product_categories', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_product_categories_id'), table_name='product_categories')
    op.drop_column('product_categories', 'id')
    op.add_column('categories', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
    op.create_unique_constraint(op.f('categories_name_key'), 'categories', ['name'], postgresql_nulls_not_distinct=False)
    op.drop_column('categories', 'subcategory')
    op.drop_index(op.f('ix_registration_products_id'), table_name='registration_products')
    op.drop_table('registration_products')
    op.drop_index(op.f('ix_registration_levels_id'), table_name='registration_levels')
    op.drop_table('registration_levels')
    op.drop_index(op.f('ix_registration_info_id'), table_name='registration_info')
    op.drop_table('registration_info')
    op.drop_index(op.f('ix_registration_agreements_id'), table_name='registration_agreements')
    op.drop_table('registration_agreements')
    # ### end Alembic commands ###
